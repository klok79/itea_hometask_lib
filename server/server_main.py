# Библиотека
# Создать два класса:
# 1. Класс библиотека
# 2. Класс книга
# 3. Класс People

from library import Library
a = Library('localhost', 5555, 1)
a.main_loop()


"""
Примерное описание того, что я должен сделать, потому что нихера не понятню.
1. Весь код вывода информации должен выполнять клиент:
    1.1. Вывод меню,ожидание ввода номера меню и отправка введенного номера (или None)  
         --- При этом само меню и его название должно передаваться в виде словаря, который содержит все 
         аргументы функции select_menu  
         {
          'title': str,
          'menu_width': int,
          'cls': bool
          'menu': dict # Тот словарь, который меню, который передается в функцию вывода меню чейчас.
          'question': str
          }
    По сути функция select_menu перекочет в код клиента, а в коде сервера эта функция превратится в 
    код формирования и отправки словаря.
    --- Пока не понятно, чем будет заниматься сервер, пока код клиента висит на input'е
    Если он просто будет висеть в цикле ожидания ответа - это архи тупо, но другого я пока не знаю
    Поэтому да, он будет висеть в функции reqv_msg. Наверное так.
    --- Функция select_menu вместо return, видимо должна выполнять отправку сообщения серверу
    1.2. Вывод списков без ожидания ввода
         --- В исходный момент функция вывода списка способна возвращать словарь, который содержит
         ключи - это номера на экране
         значения - uin выведенной книги
         --- Так как клиент понятия не имеет о uin книги - нужно его или передавать изначально, или
             хрен его знает, что делать
         --- Код сервера должен сформировать сформировать конечный список, название списка и передать
             его клиенту для вывода. Поэтому клиент никакого словаря выведенных книг возвращать не 
             должен, потому что сервер их знает
    1.3. Запрос у клиента одинарного значения 
         --- Сервер должен отправить текст попроса клиенту
         --- Клиент должен єтот текст принять и вівести его в input, введенное значение - он должен
         отправить серверу
    ------------------------------------------------------------------------
2. Так как код клиента будет представлять собой по сути вечный цикл из: 
    2.1. Ожиданием данных от сервера
    2.2. Определенного простейшенго алгоритма вывода данных
    2.3. Ожидания ввода от пользователя (Возможно пусто пустой ввод, чтобы сервер ждал)
    2.4. Отправка введенных пользователем значений без их анализа.
         Если ввод значения клиентом не предустотрен - клиент будет возвращать что-то - хуй знает что. 
         Для того, ятобы сервер ждал этого ответа
    Так как для каждого соединения в коде устанавлтвается свой тунель (conn) - то нет нужды выполнять 
    какие-либо проверки, тот ли это ответ прилетел от клиента или нет, потому что вопрос - ответ идут
    тупо последовательно. 
    Поэтому пустым ответом (п. 2.4.) может быть любой текст  
    ------------------------------------------------------------------------
3. Код секрвера функционально останется тем же
    3.1. Если работа клиента не предполагает возврата значения -     
    ------------------------------------------------------------------------
4. Согласно моей логике - клиент ожидает запроса сервера, что как-то не вяжется с понятием клиент-сервер
   При этом всем именно клиент должен инициировать соединение, а в какой момент это делать ?
   ?????????????????????????????????????????????????????????????????????????
   3.1. Чтобы начать работу - клиент должен принять сообщение от сервера!!! Говно какое-то
   3.2. Выходит, что клиент может инициировать соединение только перед запуском весного цикла
        А так как он будет организован в виде класса Client_library - в методе __init__ этого класса.
        Что делать при таком подходе (как заново поднять соединение) - не понятно 
        --- Ну вот еб твою мать.
   Упустим этот вопрос, слепим все как написано выше. Полное говно.
       ------------------------------------------------------------------------
5. Выходит, что в серверной части сокет тоже создается один раз при инициализации библиотеки
   Пусть будет так, ебать его в сраку.
    ------------------------------------------------------------------------
    Все, начинаю ваять, дальше будет видно. Вообще то нихера не понятно.         
"""